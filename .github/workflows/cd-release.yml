name: Build & Release APK

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: '17'

      - name: Write google-services.json
        run: |
          mkdir -p app
          cat <<'EOF' > app/google-services.json
          ${{ secrets.GOOGLE_SERVICES_JSON }}
          EOF

      - name: Create tokens.xml
        run: |
          mkdir -p app/src/main/res/values
          cat <<EOF > app/src/main/res/values/tokens.xml
          <?xml version="1.0" encoding="utf-8"?>
          <resources>
            <string name="firebase_web_client_id">${{ secrets.FIREBASE_WEB_CLIENT_ID }}</string>
          </resources>
          EOF

      - name: Cache Gradle
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Build release APK
        run: ./gradlew assembleRelease --no-daemon

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false

      - name: Upload APK to Release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: app/build/outputs/apk/release/app-release.apk
          asset_name: app-release.apk
          asset_content_type: application/vnd.android.package-archive
